name: Run Unit Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_call:
    inputs:
      identifier:
        required: true
        type: string

concurrency:
  group: ${{ inputs.identifier || github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: ${{ github.ref_name != 'main'}}

jobs:
  unit-test-ios:
    name: iOS Unit Tests
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
      - name: Unit test Authenticator on iOS
        run: xcodebuild test -scheme Authenticator -sdk 'iphonesimulator' -destination 'platform=iOS Simulator,name=iPhone 14,OS=latest' -derivedDataPath Build/ -enableCodeCoverage YES -clonedSourcePackagesDirPath ~/Library/Developer/Xcode/DerivedData/Authenticator | xcpretty --simple --color --report junit && exit ${PIPESTATUS[0]}
      - name: Generate Coverage Report
        continue-on-error: true
        run: |
          cd Build/Build/ProfileData
          cd $(ls -d */|head -n 1)
          pathCoverage=Build/Build/ProfileData/${PWD##*/}/Coverage.profdata
          cd ${{ github.workspace }}
          xcrun llvm-cov export -format="lcov" -instr-profile $pathCoverage Build/Build/Products/Debug-iphonesimulator/Authenticator.o > Authenticator-Coverage.lcov
      - name: Upload Report
        uses: codecov/codecov-action@84508663e988701840491b86de86b666e8a86bed # v4.3.0
        with:
          flags: Authenticator
          token: ${{ secrets.CODECOV_TOKEN }}

  unit-test-macos:
    name: macOS Unit Tests
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
      - name: Unit test Authenticator on macOS
        run: xcodebuild test -scheme Authenticator -sdk 'macosx' -destination 'platform=macOS,arch=x86_64' | xcpretty --simple --color --report junit && exit ${PIPESTATUS[0]}